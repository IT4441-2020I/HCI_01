{"ast":null,"code":"import _objectSpread from \"/home/ducanh/Documents/heroku/HCI_01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/ducanh/Documents/heroku/HCI_01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ducanh/Documents/heroku/HCI_01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/ducanh/Documents/heroku/HCI_01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/ducanh/Documents/heroku/HCI_01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/ducanh/Documents/heroku/HCI_01/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/ducanh/Documents/heroku/HCI_01/src/views/learn/Practice/CountdownTime.js\";\nimport React, { Component } from 'react';\nimport ReactCountdownClock from \"react-countdown-clock\";\nimport { render } from \"react-dom\";\nimport swal from \"sweetalert\";\nimport $ from \"jquery\"; // const fromTime = new Date(0, 0, 0, 0, 0, 0, 0);\n\nfunction reset() {\n  console.log(\"Hết giờ!\");\n} // const CountdownTime = (props) => {\n//   return (\n//     <ReactCountdownClock\n//       seconds={props.time === null ? 10 : props.time}\n//       color=\"#39f\"\n//       alpha={0.9}\n//       size={150}\n//       onComplete={notifiaction}\n//     />\n//   );\n// };\n\n\nvar CountdownTime = /*#__PURE__*/function (_Component) {\n  _inherits(CountdownTime, _Component);\n\n  var _super = _createSuper(CountdownTime);\n\n  function CountdownTime(props) {\n    var _this;\n\n    _classCallCheck(this, CountdownTime);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      time: props.time\n    };\n\n    _this.setState.bind(_assertThisInitialized(_this));\n\n    _this.setTime = _this.setTime.bind(_assertThisInitialized(_this));\n    _this.notifiaction = _this.notifiaction.bind(_assertThisInitialized(_this));\n    console.log(\"Chlid\" + _this.state.time);\n    return _this;\n  }\n\n  _createClass(CountdownTime, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(_ref) {\n      var time = _ref.time;\n      this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n        time: time\n      }));\n    }\n  }, {\n    key: \"setTime\",\n    value: function setTime() {\n      this.setState({\n        time: this.state.time + 0.000001\n      });\n    }\n  }, {\n    key: \"notifiaction\",\n    value: function notifiaction() {\n      var _this2 = this;\n\n      return swal({\n        title: \"Hết giờ!\",\n        text: \"Đã hết thời gian đã định \\nTỉ lệ gõ đúng: 100%\\nĐiểm: 80\",\n        icon: \"warning\",\n        buttons: {\n          cancel: true,\n          catch: {\n            text: \"Bắt đầu lại!\",\n            value: \"catch\"\n          }\n        }\n      }).then(function (value) {\n        // this.setTime();\n        switch (value) {\n          //   case \"defeat\":\n          //     swal(\"Pikachu fainted! You gained 500 XP!\");\n          //     break;\n          case \"catch\":\n            // useCallback();\n            // reset();\n            // this.setTime();\n            _this2.setTime();\n\n            break;\n          //   default:\n          //     swal(\"Got away safely!\");\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ReactCountdownClock, {\n        seconds: this.state.time === null ? 10 : this.state.time,\n        color: \"#39f\",\n        alpha: 0.9,\n        size: 150 // onClick={this.setTime}\n        ,\n        onComplete: this.notifiaction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return CountdownTime;\n}(Component);\n\nexport default CountdownTime;","map":{"version":3,"sources":["/home/ducanh/Documents/heroku/HCI_01/src/views/learn/Practice/CountdownTime.js"],"names":["React","Component","ReactCountdownClock","render","swal","$","reset","console","log","CountdownTime","props","state","time","setState","bind","setTime","notifiaction","title","text","icon","buttons","cancel","catch","value","then"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CACA;;AACA,SAASC,KAAT,GAAiB;AACfC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAEF,KAAK,CAACE;AADD,KAAb;;AAGA,UAAKC,QAAL,CAAcC,IAAd;;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,+BAAf;AACA,UAAKE,YAAL,GAAoB,MAAKA,YAAL,CAAkBF,IAAlB,+BAApB;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAU,MAAKG,KAAL,CAAWC,IAAjC;AARiB;AASlB;;;;oDACiC;AAAA,UAAPA,IAAO,QAAPA,IAAO;AAChC,WAAKC,QAAL,iCAAkB,KAAKF,KAAvB;AAA6BC,QAAAA,IAAI,EAAJA;AAA7B;AACD;;;8BACQ;AACP,WAAKC,QAAL,CAAc;AACZD,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAAX,GAAkB;AADZ,OAAd;AAGD;;;mCACc;AAAA;;AAEb,aACAR,IAAI,CAAC;AACHa,QAAAA,KAAK,EAAE,UADJ;AAEHC,QAAAA,IAAI,EAAE,0DAFH;AAGHC,QAAAA,IAAI,EAAE,SAHH;AAIHC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,IADD;AAEPC,UAAAA,KAAK,EAAE;AACLJ,YAAAA,IAAI,EAAE,cADD;AAELK,YAAAA,KAAK,EAAE;AAFF;AAFA;AAJN,OAAD,CAAJ,CAWGC,IAXH,CAWQ,UAACD,KAAD,EAAW;AACjB;AAEA,gBAAQA,KAAR;AAEA;AACA;AACA;AAEE,eAAK,OAAL;AACE;AACA;AACA;AACA,YAAA,MAAI,CAACR,OAAL;;AACA;AAEJ;AACA;AAdA;AAgBD,OA9BD,CADA;AAiCD;;;6BACQ;AACP,0BACE,oBAAC,mBAAD;AACA,QAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,IAAX,KAAoB,IAApB,GAA2B,EAA3B,GAAgC,KAAKD,KAAL,CAAWC,IADpD;AAEA,QAAA,KAAK,EAAC,MAFN;AAGA,QAAA,KAAK,EAAE,GAHP;AAIA,QAAA,IAAI,EAAE,GAJN,CAKA;AALA;AAMA,QAAA,UAAU,EAAE,KAAKI,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EAlEyBf,S;;AAoE5B,eAAeQ,aAAf","sourcesContent":["\nimport React, { Component } from 'react';\nimport ReactCountdownClock from \"react-countdown-clock\";\nimport { render } from \"react-dom\";\nimport swal from \"sweetalert\";\nimport $ from \"jquery\";\n// const fromTime = new Date(0, 0, 0, 0, 0, 0, 0);\nfunction reset() {\n  console.log(\"Hết giờ!\");\n}\n\n\n// const CountdownTime = (props) => {\n//   return (\n//     <ReactCountdownClock\n//       seconds={props.time === null ? 10 : props.time}\n//       color=\"#39f\"\n//       alpha={0.9}\n//       size={150}\n//       onComplete={notifiaction}\n//     />\n//   );\n// };\n\nclass CountdownTime extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: props.time,\n    };\n    this.setState.bind(this);\n    this.setTime = this.setTime.bind(this);\n    this.notifiaction = this.notifiaction.bind(this);\n    console.log(\"Chlid\" + this.state.time);\n  }\n  componentWillReceiveProps({time}) {\n    this.setState({...this.state,time})\n  }\n  setTime(){\n    this.setState({\n      time: this.state.time + 0.000001\n    });\n  }\n  notifiaction() {\n    \n    return (\n    swal({\n      title: \"Hết giờ!\",\n      text: \"Đã hết thời gian đã định \\nTỉ lệ gõ đúng: 100%\\nĐiểm: 80\",\n      icon: \"warning\",\n      buttons: {\n        cancel: true,\n        catch: {\n          text: \"Bắt đầu lại!\",\n          value: \"catch\",\n        },\n      },\n    }).then((value) => {\n      // this.setTime();\n      \n      switch (value) {\n     \n      //   case \"defeat\":\n      //     swal(\"Pikachu fainted! You gained 500 XP!\");\n      //     break;\n     \n        case \"catch\":\n          // useCallback();\n          // reset();\n          // this.setTime();\n          this.setTime();\n          break;\n     \n      //   default:\n      //     swal(\"Got away safely!\");\n      }\n    })\n    );\n  }\n  render() {\n    return (\n      <ReactCountdownClock\n      seconds={this.state.time === null ? 10 : this.state.time}\n      color=\"#39f\"\n      alpha={0.9}\n      size={150}\n      // onClick={this.setTime}\n      onComplete={this.notifiaction}\n    />\n    );\n  }\n}\nexport default CountdownTime;\n"]},"metadata":{},"sourceType":"module"}